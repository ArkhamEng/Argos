@model IEnumerable<Argos.ViewModels.Generic.PersonViewModel<Employee>>
@using Argos.Support;
@using Argos.Models.HumanResources

<table id="TbEmployeeList" class="table table-hover jambo_table dataTable">
    <thead>
        <tr class="heading">
            <th>
                <span class="fa fa-camera control-label"></span>
            </th>
            <th>
                <span class="fa fa-user control-label"></span>
                @Html.DisplayName("Empleado")
            </th>
            <th>
                <span class="fa fa-id-badge control-label"></span>
                @Html.DisplayName("RFC")
            </th>
            <th>
                <span class="fa fa-medkit control-label"></span>
                @Html.DisplayName("NSS")
            </th>
            <th>
                <span class="fa fa-phone control-label"></span>
                @Html.DisplayName("Teléfono")
            </th>
            <th>
                <span class="fa fa-envelope control-label"></span>
                @Html.DisplayName("Email")
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    <img src="@item.Image" class="img-responsive img-rounded" style="max-height:50px" />
                </td>
                <td class="text-capitalize">
                    @Html.DisplayFor(modelItem => item.Person.Name)<br />
                    @Html.DisplayFor(modelItem => item.Person.JobPosition.Name)
                </td>
                <td class="text-uppercase">
                    @Html.DisplayFor(modelItem => item.Person.FTR)
                </td>
                <td class="text-capitalize">
                    @Html.DisplayFor(modelItem => item.Person.SSN)
                </td>

                <td>
                    @foreach (var phone in item.Person.PhoneNumbers)
                    {
                        @Html.DisplayFor(modelItem => phone.Phone)<br />
                    }
                </td>
                <td class="text-lowercase">
                    @foreach (var email in item.Person.EmailAddresses)
                    {
                        @Html.DisplayFor(modelItem => email.Email)<br />
                    }
                </td>

                <td>
                    <button class="@item.EditButton" type="button" onclick="BeginUpdateEmployee(@item.Person.EntityId)">
                        <span class="@Icons.Edit"></span>
                    </button>
                    <button class="@item.DeleteButton" type="button" onclick="BeginDelete('@item.Person.EntityId','@item.Person.Name')">
                        <span class="@Icons.Delete"></span>
                    </button>
                </td>
            </tr>
        }
    </tbody>
</table>


<script>
    var idEmployee = 0;

    $(document).ready(function ()
    {
        Paginate("#TbEmployeeList", 8, true, "#txtName")
    });

    function BeginDelete(id, name)
    {
        idEmployee = id;
        var hdr = "Eliminar empleado!";
        var body = "Esta seguro que deseas eliminar el empleado " + name;
        ShowMessage(hdr, body, 'confirm', DeleteEmployee, null, 'static')
    }

    function DeleteEmployee()
    {
        ExecuteAjax('@Url.Action("DeletePerson","Catalog")', { id: idEmployee }, function (response)
        {
            HideLoading(function ()
            {
                ShowNotify(response.Header, response.Result, response.Body, 2500);
            });
        });
    }

    function BeginCreateUser(id)
    {
        ShowLoading('static');
        ExecuteAjax('@Url.Action("BeginCreateUser", "Security")', { id: id }, function (response)
        {
            HideLoading(function ()
            {
                ShowModal('<span class="fa fa-user-circle-o"></span> Creación de Usuario', response, AddUser, null, 'static', true);
            });
        });
    }

    function AddUser()
    {
        //shows the loading in current modal
        ShowModLoading();

        var model = {
            Id: $("#Id").val(), UserName: $("#UserName").val(), Email: $("#Email").val(),
            Phone: $("#Phone").val(), Name: $("#Name").val(), IsEmployee: true
        };

        ExecuteAjax('@Url.Action("Register", "Account")', { model: model }, function (response)
        {
            SearchEmployeeById(response.Id);
            HideModal(true, function ()
            {
                ShowMessage(response.Header, response.Body, response.Result, null, null, 'static');
            });
        });
    }
</script>