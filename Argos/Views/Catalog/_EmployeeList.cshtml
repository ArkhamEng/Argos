@model IEnumerable<Argos.Models.Catalog.Employee>


<table id="TbEmployeeList" class="table table-hover">
    <thead>
        <tr>
            <th>
                @Html.DisplayName("Empleado")
            </th>
            <th>
                @Html.DisplayName("Dirección")
            </th>
            <th>
                @Html.DisplayName("Contacto")
            </th>

            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr ondblclick="BeginUpdateEmployee(@item.EmployeeId)">
                <td class="col-md-4">
                    <span class="fa fa-user control-label"></span>   @Html.DisplayFor(modelItem => item.Name)<br />
                    <span class="fa fa-briefcase control-label"></span>   @Html.DisplayFor(modelItem => item.JobPosition.Name)
                  
                    @if (item.EmployeeUsers.Count != 0)
                    {
                        <span class="fa fa-user-circle-o control-label"></span>
                        @item.EmployeeUsers.First().User.UserName
                    }
                    <br /><span class="fa fa-at control-label"></span> @Html.DisplayFor(modelItem => item.Email)
                </td>
                <td class="col-md-4">
                    <span class="fa fa-street-view control-label"></span>  @Html.DisplayFor(modelItem => item.Street) No. @Html.DisplayFor(modelItem => item.OutNumber) Int @Html.DisplayFor(modelItem => item.InNumber) <br />
                    @Html.DisplayFor(modelItem => item.Location)   CP @Html.DisplayFor(modelItem => item.ZipCode) <br />
                    @Html.DisplayFor(modelItem => item.City.Name)<br />
                    @Html.DisplayFor(modelItem => item.City.State.Name)
                </td>

                <td class="col-md-3">
                    <span class="fa fa-medkit control-label"></span>   @Html.DisplayFor(modelItem => item.SSN)<br />
                    <span class="fa fa-id-badge control-label"></span>   @Html.DisplayFor(modelItem => item.FTR)<br />
                    <span class="fa fa-phone control-label"></span> @Html.DisplayFor(modelItem => item.Phone)<br />
                    
                    <span class="fa fa-percent control-label"></span>   @Html.DisplayFor(modelItem => item.Commission)<br />
                </td>

                <td class="col-md-1 btn-group-vertical">

                    <button class="btn btn-danger" type="button" onclick="BeginDelete('@item.EmployeeId','@item.Name')">
                        <span class="fa fa-trash"></span>
                    </button>
                    @if (item.EmployeeUsers.Count == 0)
                    {

                        <button class="btn btn-primary" type="button" onclick="BeginCreateUser('@item.EmployeeId')" title="Crear usuario">
                            <span class="fa fa-user-circle-o"></span>
                        </button>
                    }
                </td>
            </tr>
        }
    </tbody>
</table>
<script>
    var idEmployee = 0;

    $(document).ready(function () {
        Paginate("#TbEmployeeList", 5, false)
    });

    function BeginDelete(id, name) {
        idEmployee = id;
        var hdr = "Eliminar cliente!";
        var body = "Esta seguro que deseas eliminar el empleado " + name;
        ShowMessage(hdr, body, 'confirm', DeleteEmployee, null, 'static')

    }

    function DeleteEmployee() {
        ExecuteAjax('@Url.Action("DeleteEmployee", "Catalog")', { id: idEmployee }, function (response) {
            HideLoading(function () {
                if (response.Result == 'success') {
                    ShowMessage(response.Header, response.Body, response.Result, null, SearchEmployees, 'static');
                }
                else {
                    ShowMessage(response.Header, response.Body, response.Result, null, null, 'static');
                }
            });
        });
    }


    function BeginCreateUser(id) {
        ShowLoading('static');
        ExecuteAjax('@Url.Action("BeginCreateUser", "Catalog")', { id: id, isEmployee: true }, function (response) {
            HideLoading(function () {
                ShowModal('<span class="fa fa-user-circle-o"></span> Creación de Usuario', response, AddUser, null, 'static', true);
            });
        });
    }

    function AddUser() {
        //shows the loading in current modal
        ShowModLoading();

        var model = { Id: $("#Id").val(), UserName: $("#UserName").val(), Email: $("#Email").val(), 
            Phone: $("#Phone").val(), Name: $("#Name").val(),IsEmployee:true
        };

        ExecuteAjax('@Url.Action("Register", "Account")', { model: model }, function (response)
        {
            SearchEmployeeById(response.Id);
            HideModal(true, function ()
            {
                ShowMessage(response.Header, response.Body, response.Result, null, null, 'static');
            });
        });
    }
</script>