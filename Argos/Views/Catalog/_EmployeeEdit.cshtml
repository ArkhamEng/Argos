@model Argos.ViewModels.Generic.PersonViewModel<Employee>
@using Argos.Models.HumanResources
@using Argos.Support


@Scripts.Render("~/bundles/jqueryval")

<form id="EmployeeForm">

    <div id="EditEmployeeModal" class="modal fade small" role="dialog">
        <div id="EditEmployeeDialog" class="modal-dialog modal-lg ui-widget-content">
            <div id="EditEmployeeContent" class="modal-content panel panel-primary">
                <div class="modal-header panel-heading">
                    @*<button type="button" class="close" data-dismiss="modal">&times;</button>*@
                    <h5 id="EditEmployeeHeader" class="modal-title"></h5>
                </div>
                <div id="EditEmployeeBody" class="panel-body modal-body">

                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="panel-group">
                        <div class="panel panel-default">
                            <div class="panel-body">

                                <div class="form-group col-md-8">
                                    @Html.LabelFor(model => model.Entity.Name, htmlAttributes: new { @class = "control-label" })
                                    <div class="input-group">
                                        <span class="input-group-addon"><i class="fa fa-user"></i></span>
                                        @Html.EditorFor(model => model.Entity.Name, 
                                       new { htmlAttributes = new { @class = "form-control text-capitalize input-sm", autocompleate="off", id="empName" } })
                                    </div>
                                    @Html.ValidationMessageFor(model => model.Entity.Name, "", new { @class = "text-danger" })
                                </div>
                                <div class="form-group col-md-4">
                                    @Html.LabelFor(model => model.Entity.FTR, htmlAttributes: new { @class = "control-label" })
                                    <div class="input-group">
                                        <span class="input-group-addon"><i class="fa fa-id-badge"></i></span>
                                        @Html.EditorFor(model => model.Entity.FTR, 
                                       new { htmlAttributes = new { @class = "form-control text-uppercase input-sm", autocompleate = "off", id="empFTR" } })
                                    </div>
                                    @Html.ValidationMessageFor(model => model.Entity.FTR, "", new { @class = "text-danger" })
                                </div>
                                <div class="form-group col-md-5">
                                    @Html.LabelFor(model => model.Entity.JobPositionId, htmlAttributes: new { @class = "control-label" })
                                    <div class="input-group">
                                        <span class="input-group-addon"><i class="fa fa-briefcase"></i></span>
                                        @Html.DropDownListFor(model => model.Entity.JobPositionId, Model.JobPositions, "", 
                                       htmlAttributes: new { @class = "form-control input-sm", id="empJobPositionId" })
                                    </div>
                                    @Html.ValidationMessageFor(model => model.Entity.JobPositionId, "", new { @class = "text-danger" })
                                </div>

                                <div class="form-group col-md-3">
                                    @Html.LabelFor(model => model.Entity.Commission, htmlAttributes: new { @class = "control-label" })
                                    <div class="input-group">
                                        <span class="input-group-addon"><i class="fa fa-percent"></i></span>
                                        @Html.EditorFor(model => model.Entity.Commission, 
                                       new { htmlAttributes = new { @class = "form-control input-sm", autocompleate = "off", id="empCommission" } })
                                    </div>
                                    @Html.ValidationMessageFor(model => model.Entity.Commission, "", new { @class = "text-danger" })
                                </div>

                                <div class="form-group col-md-4">
                                    @Html.LabelFor(model => model.Entity.SSN, htmlAttributes: new { @class = "control-label" })
                                    <div class="input-group">
                                        <span class="input-group-addon"><i class="fa fa-medkit"></i></span>
                                        @Html.EditorFor(model => model.Entity.SSN, 
                                       new { htmlAttributes = new { @class = "form-control input-sm", autocompleate = "off", id="empSSN" } })
                                    </div>
                                    @Html.ValidationMessageFor(model => model.Entity.SSN, "", new { @class = "text-danger" })
                                </div>

                                <div class="form-group col-md-8">
                                    @Html.LabelFor(model => model.Entity.Email, htmlAttributes: new { @class = "control-label" })
                                    <div class="input-group">
                                        <span class="input-group-addon"><i class="fa fa-at"></i></span>
                                        @Html.EditorFor(model => model.Entity.Email, 
                                       new { htmlAttributes = new { @class = "form-control text-lowercase input-sm", autocompleate = "off", id="empEmail" } })
                                    </div>
                                    @Html.ValidationMessageFor(model => model.Entity.Email, "", new { @class = "text-danger" })
                                </div>
                                <div class="form-group col-md-4">
                                    @Html.LabelFor(model => model.Entity.Phone, htmlAttributes: new { @class = "control-label" })
                                    <div class="input-group">
                                        <span class="input-group-addon"><i class="fa fa-phone"></i></span>
                                        @Html.EditorFor(model => model.Entity.Phone, 
                                       new { htmlAttributes = new { @class = "form-control input-sm", autocompleate = "off", id="empPhone" } })
                                    </div>
                                    @Html.ValidationMessageFor(model => model.Entity.Phone, "", new { @class = "text-danger" })
                                </div>

                                <div class="form-group col-md-4">
                                    @Html.LabelFor(model => model.Entity.BirthDate, htmlAttributes: new { @class = "control-label" })
                                    <div class="input-group">
                                        <span class="input-group-addon"><i class="fa fa-birthday-cake"></i></span>
                                        @Html.EditorFor(model => model.Entity.BirthDate, 
                                       new { htmlAttributes = new { @class = "form-control input-sm", id="empBirthDate" } })
                                    </div>
                                    @Html.ValidationMessageFor(model => model.Entity.BirthDate, "", new { @class = "text-danger" })
                                </div>

                                <div class="form-group col-md-4">
                                    @Html.LabelFor(model => model.Entity.Gender, htmlAttributes: new { @class = "control-label" })
                                    <div class="input-group-addon input-sm">
                                        <Label class="control-label">
                                            <span class="fa fa-male"></span>
                                            @Cons.Male
                                            @Html.RadioButtonFor(model => model.Entity.Gender, Cons.Male)
                                        </Label>
                                    </div>
                                    <div class="input-group-addon input-sm">
                                        <Label class="control-label">
                                            <span class="fa fa-female"></span>
                                            @Cons.Female
                                            @Html.RadioButtonFor(model => model.Entity.Gender, Cons.Female)
                                        </Label>
                                    </div>
                                </div>

                                <div class="col-md-4">
                                    <div class="btn-group pull-right">
                                        <button type="button" class="btn btn-primary" id="EditEmployeeSave" title="Guardar Empleado">
                                            Guardar
                                            <span class="fa fa-save"></span>
                                        </button>
                                        <button type="button" class="btn btn-danger" id="EditEmployeeCancel">
                                            Cancelar
                                            <span class="fa fa-remove"></span>
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="panel panel-default">
                            <div class="panel-body">
                                <div class="form-group col-md-6">
                                    @Html.LabelFor(model => model.Entity.City.StateId, htmlAttributes: new { @class = "control-label" })
                                    <div class="input-group">
                                        <span class="input-group-addon"><i class="fa fa-map"></i></span>
                                        @Html.DropDownList("empStateId", Model.States, "", htmlAttributes: new { @class = "form-control input-sm" })
                                    </div>
                                    @Html.ValidationMessageFor(model => model.Entity.City.StateId, "", new { @class = "text-danger" })
                                </div>

                                <div class="form-group col-md-6">
                                    @Html.LabelFor(model => model.Entity.CityId, htmlAttributes: new { @class = "control-label" })
                                    <div class="input-group">
                                        <span class="input-group-addon"><i class="fa fa-map"></i></span>
                                        @Html.DropDownListFor(model => model.Entity.CityId, Model.Cities, "", 
                                       htmlAttributes: new { @class = "form-control input-sm", id="empCityId" })
                                    </div>
                                    @Html.ValidationMessageFor(model => model.Entity.City.CityId, "", new { @class = "text-danger" })
                                </div>
                                <div class="form-group col-md-8">
                                    @Html.LabelFor(model => model.Entity.Street, htmlAttributes: new { @class = "control-label" })
                                    <div class="input-group">
                                        <span class="input-group-addon"><i class="fa fa-street-view"></i></span>
                                        @Html.EditorFor(model => model.Entity.Street, 
                                       new { htmlAttributes = new { @class = "form-control text-capitalize input-sm", autocompleate = "off", id="empStreet" } })
                                    </div>
                                    @Html.ValidationMessageFor(model => model.Entity.Street, "", new { @class = "text-danger" })
                                </div>

                                <div class="form-group col-md-2">
                                    @Html.LabelFor(model => model.Entity.OutNumber, htmlAttributes: new { @class = "control-label" })
                                    <div class="input-group">
                                        <span class="input-group-addon"><i class="fa fa-hashtag"></i></span>
                                        @Html.EditorFor(model => model.Entity.OutNumber, 
                                       new { htmlAttributes = new { @class = "form-control text-uppercase input-sm", autocompleate = "off", id="empOutNumber" } })
                                    </div>
                                    @Html.ValidationMessageFor(model => model.Entity.OutNumber, "", new { @class = "text-danger" })
                                </div>
                                <div class="form-group col-md-2 ">
                                    @Html.LabelFor(model => model.Entity.InNumber, htmlAttributes: new { @class = "control-label" })
                                    <div class="input-group">
                                        <span class="input-group-addon"><i class="fa fa-hashtag"></i></span>
                                        @Html.EditorFor(model => model.Entity.InNumber, 
                                       new { htmlAttributes = new { @class = "form-control text-uppercase input-sm", autocompleate = "off", id="empInNumber" } })
                                    </div>
                                    @Html.ValidationMessageFor(model => model.Entity.InNumber, "", new { @class = "text-danger" })
                                </div>

                                <div class="form-group col-md-8">
                                    @Html.LabelFor(model => model.Entity.Location, htmlAttributes: new { @class = "control-label" })
                                    <div class="input-group">
                                        <span class="input-group-addon"><i class="fa fa-location-arrow"></i></span>
                                        @Html.EditorFor(model => model.Entity.Location, 
                                       new { htmlAttributes = new { @class = "form-control text-capitalize input-sm", autocompleate="off", id="empLocation" } })
                                    </div>
                                    @Html.ValidationMessageFor(model => model.Entity.Location, "", new { @class = "text-danger" })
                                </div>

                                <div class="form-group col-md-4">
                                    @Html.LabelFor(model => model.Entity.ZipCode, htmlAttributes: new { @class = "control-label" })
                                    <div class="input-group">
                                        <span class="input-group-addon"><i class="fa fa-map-pin"></i></span>
                                        @Html.EditorFor(model => model.Entity.ZipCode, 
                                       new { htmlAttributes = new { @class = "form-control input-sm", autocompleate="off", id="empZipCode" } })
                                    </div>
                                    @Html.ValidationMessageFor(model => model.Entity.ZipCode, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>

                    @Html.HiddenFor(m => m.Entity.EmployeeId, new { id = "empEmployeeId" })
                </div>
            </div>
            <div id="EditEmployeeLoading">
                <img class="img-responsive col-md-6 col-md-offset-3" src="~/Images/loading.gif" />
            </div>
        </div>
    </div>
</form>

<script>
    $(document).ready(function ()
    {
        SetCascade("#empStateId", "#empCityId", '@Url.Action("GetCities","Configuration")');

        $("#EditEmployeeDialog").draggable();

        $("#empPhone").mask("(999) 999 99 99");

        $("#empSSN").mask("99999999999");

        $("#empFTR").mask("aaa*99999****");
        
        $("#empZipCode").mask("99999");

        var form = $("#EmployeeForm");
        form.validate();
    });


</script>