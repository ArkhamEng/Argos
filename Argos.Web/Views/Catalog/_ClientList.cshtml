@model IEnumerable<PersonViewModel<Client>>

@using Argos.Models.Sales
@using Argos.ViewModels.Generic


<table id="TbClientList" class="table table-responsive jambo_table table-bordered">
    <thead>
        <tr class="heading">
            <th style="min-width:50px">
                
            </th>
            <th style="min-width:250px">
                @Html.DisplayName("Nombre")
            </th>
            <th>
                @Html.DisplayName("RFC")
            </th>
            <th>
                @Html.DisplayName("Credito")
            </th>
            <th>
                @Html.DisplayName("Saldo")
            </th>
            <th>
                @Html.DisplayName("Teléfonos")
            </th>
            <th>
                @Html.DisplayName("Emails")
            </th>
            <th>
                @Html.DisplayName("Direcciones")
            </th>
            <th style="min-width:150px">
                @Html.DisplayName("Fecha de alta")
            </th>
            <th style="min-width:150px">
                @Html.DisplayName("Agregado por")
            </th>
            <th style="min-width:150px">
                @Html.DisplayName("Fecha Modificación")
            </th>
            <th style="min-width:150px">
                @Html.DisplayName("Modificado por")
            </th>
            <th style="min-width:100px">
                Acciones
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    <img src="@item.Image" class="img-responsive img-rounded" />
                </td>
                <td>
                    <a class="text-capitalize">
                        @Html.DisplayFor(modelItem => item.Person.Name)
                    </a>
                </td>
                <td>
                    <a class="text-uppercase">
                        @Html.DisplayFor(modelItem => item.Person.FTR)
                    </a>
                </td>
                <td>
                    <a class="text-capitalize">
                        @Html.DisplayFor(modelItem => item.Person.CreditStatus.Name)
                    </a>
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Person.CreditBalance)
                </td>
                <td>
                    @item.Person.PhoneNumbers.Count
                </td>
                <td>
                    @item.Person.EmailAddresses.Count
                </td>
                <td>
                    @item.Person.Addresses.Count
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Person.InsDate)
                </td>
                <td>
                    <a class="text-capitalize">
                        @Html.DisplayFor(modelItem => item.Person.InsUser)
                    </a>
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Person.UpdDate)
                </td>
                <td>
                    <a class="text-capitalize">
                        @Html.DisplayFor(modelItem => item.Person.UpdUser)
                    </a>
                </td>

                <td>
                    <button class="@Argos.Common.Styles.Buttons.Primary" type="button" onclick="ShowDetail(@item.Person.EntityId)">
                        @Html.Raw(Argos.Common.Styles.ButtonContent.Detail)
                    </button>
                    <button class="@Argos.Common.Styles.Buttons.Danger" type="button" disabled="@item.DeleteDisabled"
                            onclick="BeginDelete('@item.Person.EntityId','@item.Person.Name')">
                       @Html.Raw(Argos.Common.Styles.ButtonContent.Eliminate)
                    </button>
                </td>
            </tr>
        }
    </tbody>
</table>
<script>
    var idClient = 0;

    $(document).ready(function () {
        Paginate("#TbClientList", 8, true, "#txtName", false, "#tbButtons")
    });

    function BeginDelete(id, name) {
        idClient = id;
        var hdr = "Eliminar cliente!";
        var body = "Esta seguro que deseas eliminar el cliente " + name;
        ShowMessage(hdr, body, 'confirm', DeleteClient, OnDeleteCanceled, 'static')
    }

    function DeleteClient() {
        ExecuteAjax('@Url.Action("DeletePerson","Catalog")', { id: idClient }, function (response) {
            HideLoading(function () {
                ShowNotify(response.Header, response.Result, response.Body, 2500);
            });
        });
    }


    function OnDeleteCanceled() {
        console.log("Confirm Cerrado");
    }
</script>