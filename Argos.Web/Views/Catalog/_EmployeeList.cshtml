@model IEnumerable<PersonViewModel<Employee>>

@using Argos.ViewModels.Generic
@using Argos.Models.HumanResources

<table id="TbEmployeeList" class="table table-hover jambo_table dataTable">
    <thead>
        <tr class="heading">
            <th style="min-width:50px">
                
            </th>
            <th style="min-width:250px">
                @Html.DisplayName("Nombre")
            </th>
            <th style="min-width:150px">
                @Html.DisplayName("Puesto")
            </th>
            <th>
                @Html.DisplayName("RFC")
            </th>
            <th>
                @Html.DisplayName("NSS")
            </th>
            <th>
                @Html.DisplayName("Usuario")
            </th>
            <th>
                @Html.DisplayName("Teléfonos")
            </th>
            <th>
                @Html.DisplayName("Emails")
            </th>
            <th>
                @Html.DisplayName("Direcciones")
            </th>
            <th style="min-width:150px">
                @Html.DisplayName("Fecha de alta")
            </th>
            <th style="min-width:150px">
                @Html.DisplayName("Agregado por")
            </th>
            <th style="min-width:150px">
                @Html.DisplayName("Fecha Modificación")
            </th>
            <th style="min-width:150px">
                @Html.DisplayName("Modificado por")
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    <img src="@item.Image" class="img-responsive img-rounded" />
                </td>
                <td>
                    <a class="text-capitalize">
                        @Html.DisplayFor(modelItem => item.Person.Name)
                    </a>
                </td>
                <td>
                    <a class="text-capitalize">
                        @item.Person.JobPosition.Name.ToLower()
                    </a>
                </td>
                <td>
                    <a class="text-uppercase">
                        @Html.DisplayFor(modelItem => item.Person.FTR)
                    </a>
                </td>
            
                <td class="text-capitalize">
                    @Html.DisplayFor(modelItem => item.Person.SSN)
                </td>
                <td>
                    <a class="text-uppercase">
                        @Html.DisplayFor(modelItem => item.Person.SystemUser.User.UserName)
                    </a>
                </td>

                <td>
                    @item.Person.PhoneNumbers.Count
                </td>
                <td class="text-lowercase">
                    @item.Person.EmailAddresses.Count
                </td>
                <td class="text-lowercase">
                    @item.Person.Addresses.Count
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Person.InsDate)
                </td>
                <td>
                    <a class="text-capitalize">
                        @Html.DisplayFor(modelItem => item.Person.InsUser)
                    </a>
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Person.UpdDate)
                </td>
                <td>
                    <a class="text-capitalize">
                        @Html.DisplayFor(modelItem => item.Person.UpdUser)
                    </a>
                </td>

                <td>
                    <div class="pull-right">
                        <button class="btn btn-primary" type="button" onclick="ShowDetail(@item.Person.EntityId)">
                            <span class="@Argos.Common.Styles.Icons.Show"></span>
                        </button>
                        <button class="@item.DeleteButton" type="button" onclick="BeginDelete('@item.Person.EntityId','@item.Person.Name')" disabled="@true">
                            <span class="@Argos.Common.Styles.Icons.Delete"></span>
                        </button>
                    </div>
                </td>
            </tr>
        }
    </tbody>
</table>
<div id="divButtons"></div>

<script>
    var idEmployee = 0;

    $(document).ready(function ()
    {
        Paginate("#TbEmployeeList", 8, true, "#txtName", false, "#divButtons")
    });

    function BeginDelete(id, name)
    {
        idEmployee = id;
        var hdr = "Eliminar empleado!";
        var body = "Esta seguro que deseas eliminar el empleado " + name;
        ShowMessage(hdr, body, 'confirm', DeleteEmployee, null, 'static')
    }

    function DeleteEmployee()
    {
        ExecuteAjax('@Url.Action("DeletePerson","Catalog")', { id: idEmployee }, function (response)
        {
            HideLoading(function ()
            {
                ShowNotify(response.Header, response.Result, response.Body, 2500);
            });
        });
    }

    function BeginCreateUser(id)
    {
        ShowLoading('static');
        ExecuteAjax('@Url.Action("BeginCreateUser", "Security")', { id: id }, function (response)
        {
            HideLoading(function ()
            {
                ShowModal('<span class="fa fa-user-circle-o"></span> Creación de Usuario', response, AddUser, null, 'static', true);
            });
        });
    }

    function AddUser()
    {
        //shows the loading in current modal
        ShowModLoading();

        var model = {
            Id: $("#Id").val(), UserName: $("#UserName").val(), Email: $("#Email").val(),
            Phone: $("#Phone").val(), Name: $("#Name").val(), IsEmployee: true
        };

        ExecuteAjax('@Url.Action("Register", "Account")', { model: model }, function (response)
        {
            SearchEmployeeById(response.Id);
            HideModal(true, function ()
            {
                ShowMessage(response.Header, response.Body, response.Result, null, null, 'static');
            });
        });
    }
</script>