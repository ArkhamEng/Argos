@model IEnumerable<Argos.Models.Production.Service>


<table id="tbServices" class="table table-responsive table-striped jambo_table small" style="width:100%">
    <thead>
        <tr style="white-space:nowrap">
            
            <th style="white-space:nowrap">
                @Html.DisplayNameFor(model => model.Account.Code)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Account.ClientId)
            </th>
             <th>
                @Html.DisplayNameFor(model => model.ServiceTypeId)
            </th>
            <th style="white-space:nowrap">
                @Html.DisplayNameFor(model => model.ScheduleDate)
            </th>
            <th style="white-space:nowrap">
                @Html.DisplayNameFor(model => model.DueDate)
            </th>
            <th >
                @Html.DisplayNameFor(model => model.Comment)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.IsDone)
            </th>
            <th style="white-space:nowrap">
                @Html.DisplayNameFor(model => model.StartDate)
            </th>
            <th style="white-space:nowrap">
                @Html.DisplayNameFor(model => model.CompletionDate)
            </th>
            <th style="white-space:nowrap">
                @Html.DisplayNameFor(model => model.InsDate)
            </th>
            <th style="white-space:nowrap">
                @Html.DisplayNameFor(model => model.InsUser)
            </th>
            <th style="white-space:nowrap">
                @Html.DisplayNameFor(model => model.UpdDate)
            </th>
            <th style="white-space:nowrap">
                @Html.DisplayNameFor(model => model.UpdUser)
            </th>
          
            <th>
                @Html.DisplayName("Acciones")
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
  
                <td>
                    @Html.DisplayFor(modelItem => item.Account.Code)
                </td>
                <td style="min-width:250px">
                    @Html.DisplayFor(modelItem => item.Account.Client.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ServiceType.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ScheduleDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DueDate)
                </td>
                <td style="min-width:250px">
                    @Html.DisplayFor(modelItem => item.Comment)
                </td>
                <td>
                    <div class="checkbox-inline">
                        @Html.EditorFor(modelItem => item.IsDone, new { htmlAttributes = new { @class = "BlockEdit flat", disabled = true } })
                    </div>
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.StartDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CompletionDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.InsDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.InsUser)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.UpdDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.UpdUser)
                </td>
              
                <td>
                    @if (!item.IsDone)
                    {
                        <button class="btn btn-primary btn-sm" type="button" onclick="GetService('@item.OccurenceId')">
                            <span class="fa fa-check"></span>
                            Completar Seguimiento
                        </button>
                    }
                </td>
            </tr>
        }
    </tbody>
</table>

<script>
    $(document).ready(function ()
    {
        Paginate('#tbServices', 8, true, null, false, "#tbButtons", function () { iCheckInit(); });

    });

    function GetService(id)
    {
        ShowLoading('static');

        ExecuteAjax('@Url.Action("GetService", "Production")', { id: id }, function (response)
        {
            HideLoading(function ()
            {
                ShowModal(response, 'static');
            });
        });
    }
</script>